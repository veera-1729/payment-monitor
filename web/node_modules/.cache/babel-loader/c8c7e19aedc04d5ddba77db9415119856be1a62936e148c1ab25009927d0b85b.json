{"ast":null,"code":"var _jsxFileName = \"/Users/gyanendra.singh/ai_stuff/alterbridge/payment-monitor/web/src/components/DimensionSelector.js\";\nimport React from 'react';\nimport { Box, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DimensionSelector({\n  dimensions,\n  selectedDimension,\n  onDimensionChange\n}) {\n  const handleChange = (event, newDimension) => {\n    if (newDimension !== null) {\n      onDimensionChange(newDimension);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 2\n      },\n      children: \"Select Dimension\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: selectedDimension,\n      exclusive: true,\n      onChange: handleChange,\n      \"aria-label\": \"dimension selector\",\n      children: dimensions.map(dimension => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: dimension,\n        \"aria-label\": dimension,\n        sx: {\n          textTransform: 'none',\n          px: 3,\n          py: 1\n        },\n        children: dimension.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n      }, dimension, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = DimensionSelector;\nexport default DimensionSelector;\nvar _c;\n$RefreshReg$(_c, \"DimensionSelector\");","map":{"version":3,"names":["React","Box","ToggleButton","ToggleButtonGroup","Typography","jsxDEV","_jsxDEV","DimensionSelector","dimensions","selectedDimension","onDimensionChange","handleChange","event","newDimension","children","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","value","exclusive","onChange","map","dimension","textTransform","px","py","split","word","charAt","toUpperCase","slice","join","_c","$RefreshReg$"],"sources":["/Users/gyanendra.singh/ai_stuff/alterbridge/payment-monitor/web/src/components/DimensionSelector.js"],"sourcesContent":["import React from 'react';\nimport { Box, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\n\nfunction DimensionSelector({ dimensions, selectedDimension, onDimensionChange }) {\n  const handleChange = (event, newDimension) => {\n    if (newDimension !== null) {\n      onDimensionChange(newDimension);\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Select Dimension\n      </Typography>\n      <ToggleButtonGroup\n        value={selectedDimension}\n        exclusive\n        onChange={handleChange}\n        aria-label=\"dimension selector\"\n      >\n        {dimensions.map((dimension) => (\n          <ToggleButton\n            key={dimension}\n            value={dimension}\n            aria-label={dimension}\n            sx={{\n              textTransform: 'none',\n              px: 3,\n              py: 1,\n            }}\n          >\n            {dimension.split('_').map(word => \n              word.charAt(0).toUpperCase() + word.slice(1)\n            ).join(' ')}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n\nexport default DimensionSelector; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,SAASC,iBAAiBA,CAAC;EAAEC,UAAU;EAAEC,iBAAiB;EAAEC;AAAkB,CAAC,EAAE;EAC/E,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;IAC5C,IAAIA,YAAY,KAAK,IAAI,EAAE;MACzBH,iBAAiB,CAACG,YAAY,CAAC;IACjC;EACF,CAAC;EAED,oBACEP,OAAA,CAACL,GAAG;IAAAa,QAAA,gBACFR,OAAA,CAACF,UAAU;MAACW,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAExC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbf,OAAA,CAACH,iBAAiB;MAChBmB,KAAK,EAAEb,iBAAkB;MACzBc,SAAS;MACTC,QAAQ,EAAEb,YAAa;MACvB,cAAW,oBAAoB;MAAAG,QAAA,EAE9BN,UAAU,CAACiB,GAAG,CAAEC,SAAS,iBACxBpB,OAAA,CAACJ,YAAY;QAEXoB,KAAK,EAAEI,SAAU;QACjB,cAAYA,SAAU;QACtBV,EAAE,EAAE;UACFW,aAAa,EAAE,MAAM;UACrBC,EAAE,EAAE,CAAC;UACLC,EAAE,EAAE;QACN,CAAE;QAAAf,QAAA,EAEDY,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAACL,GAAG,CAACM,IAAI,IAC5BA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAC7C,CAAC,CAACC,IAAI,CAAC,GAAG;MAAC,GAXNT,SAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYF,CACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACe,EAAA,GArCQ7B,iBAAiB;AAuC1B,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}